name: Build Enhanced Kernel

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup environment
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential libncurses-dev libssl-dev bc flex bison libelf-dev dwarves python3 git zip curl wget
        # 安装系统自带的交叉编译工具
        sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu clang lld

    - name: Configure kernel
      run: |
        export ARCH=arm64
        export SUBARCH=arm64
        # 使用系统自带的工具链
        export CROSS_COMPILE=aarch64-linux-gnu-
        
        mkdir -p out
        
        make O=out ARCH=arm64 alioth_defconfig
        
        echo "CONFIG_ZSTD_COMPRESS=y" >> out/.config
        echo "CONFIG_ZSTD_DECOMPRESS=y" >> out/.config
        echo "CONFIG_KERNEL_ZSTD=y" >> out/.config
        echo "CONFIG_ZRAM=y" >> out/.config
        echo "CONFIG_ZRAM_DEF_COMP_ZSTD=y" >> out/.config
        echo "CONFIG_SWAP=y" >> out/.config
        echo "CONFIG_CGROUP_FREEZER=y" >> out/.config
        
        make O=out ARCH=arm64 olddefconfig

    - name: Build kernel
      run: |
        export ARCH=arm64
        export SUBARCH=arm64
        export CROSS_COMPILE=aarch64-linux-gnu-
        
        make O=out ARCH=arm64 -j$(nproc)
        
        if [ -f "out/arch/arm64/boot/Image.gz-dtb" ]; then
          echo "✅ Kernel build successful!"
          ls -lh out/arch/arm64/boot/Image.gz-dtb
        else
          echo "❌ Kernel build failed!"
          exit 1
        fi

    - name: Prepare AnyKernel3
      run: |
        git clone https://github.com/osm0sis/AnyKernel3
        cp out/arch/arm64/boot/Image.gz-dtb AnyKernel3/
        
        cat > AnyKernel3/anykernel.sh << 'EOF'
        #!/system/bin/sh
        # AnyKernel3 Ramdisk Mod Script
        # osm0sis @ xda-developers
        
        ## AnyKernel setup
        properties() { '
        kernel.string=Enhanced Kernel by GitHub Actions
        do.devicecheck=1
        do.modules=0
        do.systemless=1
        do.cleanup=1
        do.cleanuponabort=0
        device.name1=alioth
        device.name2=aliothin
        '; }
        
        ## AnyKernel methods
        . tools/ak3-core.sh;
        
        ## AnyKernel file attributes
        set_perm_recursive 0 0 755 644 $ramdisk/*;
        set_perm_recursive 0 0 750 750 $ramdisk/init* $ramdisk/sbin;
        
        ## AnyKernel install
        dump_boot;
        write_boot;
        EOF

    - name: Create flashable zip
      run: |
        cd AnyKernel3
        zip -r9 ../Enhanced_Kernel_$(date +%Y%m%d_%H%M%S).zip . -x "*.git*"
        cd ..
        ls -lh *.zip

    - name: Upload kernel
      uses: actions/upload-artifact@v4
      with:
        name: enhanced-kernel
        path: |
          *.zip
          out/arch/arm64/boot/Image.gz-dtb
